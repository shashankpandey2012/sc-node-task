{"version":3,"sources":["../../utility/Secured.js"],"names":["api_auth","req","res","next","console","log","url","token","header","decoded","verify","secret","issuer","user","user_id","sub","status","json","data","message","err"],"mappings":";;;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AANA;;;AAQA,IAAIA,WAAW,SAAXA,QAAW,CAACC,GAAD,EAAOC,GAAP,EAAaC,IAAb,EAAoB;AAC/BC,YAAQC,GAAR,CAAYJ,IAAIK,GAAhB;AACA,QAAIC,QAAQN,IAAIO,MAAJ,CAAW,eAAX,CAAZ;AACA,QAAGD,KAAH,EAAS;AACLH,gBAAQC,GAAR,CAAY,QAAZ;AACA,YAAI;AACA,gBAAII,UAAU,uBAAIC,MAAJ,CAAWH,KAAX,EAAkB,qBAAWI,MAA7B,EAAsC,EAACC,QAAS,qBAAWA,MAArB,EAAtC,CAAd;AACA,gBAAIC,OAAO,uCAAiB,EAAEC,SAAUL,QAAQM,GAApB,EAAjB,CAAX;AACA,gBAAGF,IAAH,EAAQ;;AAEJZ,oBAAIQ,OAAJ,GAAcI,IAAd;AACAV;AACH,aAJD,MAKI;AACA,uBAAOD,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,0BAAO,IADiB;AAExBC,6BAAS,6BAFe;AAGxBH,4BAAQ;AAHgB,iBAArB,CAAP;AAKH;AAEJ,SAhBD,CAgBE,OAAMI,GAAN,EAAW;AACT;AACAhB,oBAAQC,GAAR,CAAYe,GAAZ;AACA,mBAAOlB,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,sBAAM,IADkB;AAExBC,yBAAS,WAFe;AAGxBH,wBAAS;AAHe,aAArB,CAAP;AAKH;AACJ,KA3BD,MA4BK;AACD;AACA;AACA,eAAOd,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,kBAAM,IADkB;AAExBC,qBAAS,WAFe;AAGxBH,oBAAS;AAHe,SAArB,CAAP;AAKH;AACJ,CAxCD;;kBA0CehB,Q","file":"Secured.js","sourcesContent":["/**\r\n * Created by Shashank on 5/4/2017.\r\n */\r\nimport jwt from 'jsonwebtoken';\r\nimport PrivateKey from './PrivateKey';\r\nimport user_data from '../data/users';\r\nimport { find } from 'lodash/collection';\r\n\r\nlet api_auth = (req , res , next)=>{\r\n    console.log(req.url);\r\n    let token = req.header('Authorization');\r\n    if(token){\r\n        console.log(\"INSIDE\");\r\n        try {\r\n            let decoded = jwt.verify(token, PrivateKey.secret , {issuer : PrivateKey.issuer } );\r\n            let user = find(user_data , { user_id : decoded.sub });\r\n            if(user){\r\n\r\n                req.decoded = user;\r\n                next();\r\n            }\r\n            else{\r\n                return res.status(403).json({\r\n                    data : null,\r\n                    message: 'Invalid LoginId or Password',\r\n                    status: 403\r\n                });\r\n            }\r\n\r\n        } catch(err) {\r\n            // err\r\n            console.log(err);\r\n            return res.status(403).json({\r\n                data: null,\r\n                message: 'FORBIDDEN',\r\n                status : 403\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        // if there is no token\r\n        // return an error\r\n        return res.status(403).json({\r\n            data: null,\r\n            message: 'FORBIDDEN',\r\n            status : 403\r\n        });\r\n    }\r\n};\r\n\r\nexport default api_auth;\r\n\r\n\r\n\r\n\r\n"]}