{"version":3,"sources":["../../controllers/UserController.js"],"names":["login","req","res","body","user_id","undefined","password","user","console","log","verify","password_hash","token","sign","secret","algorithm","issuer","subject","expiresIn"],"mappings":";;;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AARA;;;kBAUe;;AAEXA,WAAQ,eAACC,GAAD,EAAKC,GAAL,EAAW;;AAEf,YAAGD,IAAIE,IAAJ,CAASC,OAAT,KAAqBC,SAArB,IAAkCJ,IAAIE,IAAJ,CAASG,QAAT,KAAsBD,SAA3D,EAAqE;AACjE,uCAAYH,GAAZ,EAAkB,IAAlB,EAAwB,WAAxB,EAAsC,GAAtC;AACH,SAFD,MAGI;AACA,gBAAIE,UAAUH,IAAIE,IAAJ,CAASC,OAAvB;AACA,gBAAIE,WAAWL,IAAIE,IAAJ,CAASG,QAAxB;AACA,gBAAIC,OAAO,uCAAiB,EAACH,SAAUA,OAAX,EAAjB,CAAX;AACAI,oBAAQC,GAAR,CAAYF,IAAZ;AACA,gBAAGA,IAAH,EAAQ;AACJ,oBAAG,uBAAaG,MAAb,CAAoBJ,QAApB,EAA+BC,KAAKI,aAApC,CAAH,EAAsD;AAClDH,4BAAQC,GAAR,CAAY,QAAZ;AACA,wBAAIG,QAAQ,uBAAIC,IAAJ,CAAS,EAAT,EAAa,qBAAWC,MAAxB,EAAiC,EAACC,WAAY,OAAb,EAAwBC,QAAS,qBAAWA,MAA5C,EAAqDC,SAAUb,OAA/D,EAAyEc,WAAU,OAAnF,EAAjC,CAAZ;AACA,+CAAYhB,GAAZ,EAAkB,EAACE,SAAUA,OAAX,EAAqBQ,OAAQA,KAA7B,EAAlB,EAAwD,IAAxD,EAA+D,GAA/D;AACH,iBAJD,MAKI;AACA,+CAAYV,GAAZ,EAAiB,IAAjB,EAAuB,4BAAvB,EAAsD,GAAtD;AACH;AACJ,aATD,MAUI;AACA,2CAAYA,GAAZ,EAAiB,IAAjB,EAAuB,4BAAvB,EAAsD,GAAtD;AACH;AACJ;AAGJ;AA5BU,C","file":"UserController.js","sourcesContent":["/**\r\n * Created by Shashank on 5/4/2017.\r\n */\r\nimport jwt from 'jsonwebtoken';\r\nimport passwordHash from 'password-hash';\r\nimport user_data from '../data/users';\r\nimport privateKey from '../utility/PrivateKey';\r\nimport { find } from 'lodash/collection';\r\nimport APIResponse from './APIResponse';\r\n\r\nexport default {\r\n\r\n    login : (req,res)=>{\r\n\r\n        if(req.body.user_id === undefined || req.body.password === undefined){\r\n            APIResponse(res , null, 'FORBIDDEN' , 403);\r\n        }\r\n        else{\r\n            let user_id = req.body.user_id;\r\n            let password = req.body.password;\r\n            let user = find(user_data , {user_id : user_id});\r\n            console.log(user);\r\n            if(user){\r\n                if(passwordHash.verify(password , user.password_hash)){\r\n                    console.log('Inside');\r\n                    let token = jwt.sign({} ,privateKey.secret , {algorithm : 'HS512' ,  issuer : privateKey.issuer , subject : user_id , expiresIn:5184000} );\r\n                    APIResponse(res , {user_id : user_id , token : token} , 'OK' , 200);\r\n                }\r\n                else{\r\n                    APIResponse(res, null, 'Invalid UserId or Password' , 403);\r\n                }\r\n            }\r\n            else{\r\n                APIResponse(res, null, 'Invalid UserId or Password' , 403);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n};"]}